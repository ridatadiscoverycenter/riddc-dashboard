import {
  RiBuoyVariable,
  MaBuoyVariable,
  PlanktonVariable,
  RealTimeBuoyVariable,
} from '../api/buoy';
import { Dataset } from '../api/buoy/types';

// Rhode Island Buoys
const RI_VAR_LABELS = [
  '% O2 (Surface)',
  '% O2 (Bottom)',
  'Depth (Bottom)',
  'Depth (Surface)',
  'pH (Bottom)',
  'pH (Surface)',
  'Specific Conductance (Surface)',
  'Specific Conductance (Bottom)',
  'Temperature (Bottom)',
  'Temperature (Surface)',
  'O2 (Surface)',
  'O2 (Bottom)',
  'Salinity (Bottom)',
  'Salinity (Surface)',
  'Density (Surface)',
  'Density (Bottom)',
  'Turbidity (Bottom)',
  'Chlorophyll',
  'Total Fluorescence',
] as const;

const RI_PAIRS: { viewer: (typeof RI_VAR_LABELS)[number]; erddap: RiBuoyVariable }[] = [
  { viewer: '% O2 (Surface)', erddap: 'O2PercentSurface' },
  { viewer: '% O2 (Bottom)', erddap: 'O2PercentBottom' },
  { viewer: 'Depth (Bottom)', erddap: 'DepthBottom' },
  { viewer: 'Depth (Surface)', erddap: 'depth' },
  { viewer: 'pH (Bottom)', erddap: 'pHBottom' },
  { viewer: 'pH (Surface)', erddap: 'pHSurface' },
  { viewer: 'Specific Conductance (Surface)', erddap: 'SpCondSurface' },
  { viewer: 'Specific Conductance (Bottom)', erddap: 'SpCondBottom' },
  { viewer: 'Temperature (Bottom)', erddap: 'WaterTempBottom' },
  { viewer: 'Temperature (Surface)', erddap: 'WaterTempSurface' },
  { viewer: 'O2 (Surface)', erddap: 'O2Surface' },
  { viewer: 'O2 (Bottom)', erddap: 'O2Bottom' },
  { viewer: 'Salinity (Bottom)', erddap: 'SalinityBottom' },
  { viewer: 'Salinity (Surface)', erddap: 'SalinitySurface' },
  { viewer: 'Density (Surface)', erddap: 'DensitySurface' },
  { viewer: 'Density (Bottom)', erddap: 'DensityBottom' },
  { viewer: 'Turbidity (Bottom)', erddap: 'TurbidityBottom' },
  { viewer: 'Chlorophyll', erddap: 'ChlorophyllSurface' },
  { viewer: 'Total Fluorescence', erddap: 'FSpercentSurface' },
] as const;

// MA buoys
const MA_VAR_LABELS = [
  'Chlorophyll (Bottom)',
  'Chlorophyll (Surface)',
  'Depth',
  'Depth (Bottom)',
  'Depth (Surface)',
  'Nitrate N (Surface)',
  'O2 (Bottom)',
  '% O2 (Bottom)',
  '% O2 (Surface)',
  'O2 (Surface)',
  'pH (Bottom)',
  'pH (Surface)',
  'Phycoerythrin (Bottom)',
  'Phycoerythrin (Surface)',
  'Salinity (Bottom)',
  'Salinity (Surface)',
  'Specific Conductance (Bottom)',
  'Specific Conductance (Surface)',
  'Water Temp (Bottom)',
  'Water Temp (Surface)',
] as const;

const MA_PAIRS: { viewer: (typeof MA_VAR_LABELS)[number]; erddap: MaBuoyVariable }[] = [
  { viewer: 'Depth', erddap: 'depth' },
  { viewer: 'Depth (Surface)', erddap: 'DepthSurface' },
  { viewer: 'Depth (Bottom)', erddap: 'DepthBottom' },
  { viewer: 'pH (Bottom)', erddap: 'pHBottom' },
  { viewer: 'Chlorophyll (Bottom)', erddap: 'ChlorophyllBottom' },
  { viewer: 'Chlorophyll (Surface)', erddap: 'ChlorophyllSurface' },
  { viewer: 'Nitrate N (Surface)', erddap: 'NitrateNSurface' },
  { viewer: 'O2 (Bottom)', erddap: 'O2Bottom' },
  { viewer: '% O2 (Bottom)', erddap: 'O2PercentBottom' },
  { viewer: '% O2 (Surface)', erddap: 'O2PercentSurface' },
  { viewer: 'O2 (Surface)', erddap: 'O2Surface' },
  { viewer: 'pH (Surface)', erddap: 'pHSurface' },
  { viewer: 'Phycoerythrin (Bottom)', erddap: 'PhycoerythrinBottom' },
  { viewer: 'Phycoerythrin (Surface)', erddap: 'PhycoerythrinSurface' },
  { viewer: 'Salinity (Bottom)', erddap: 'SalinityBottom' },
  { viewer: 'Salinity (Surface)', erddap: 'SalinitySurface' },
  { viewer: 'Specific Conductance (Bottom)', erddap: 'SpCondBottom' },
  { viewer: 'Specific Conductance (Surface)', erddap: 'SpCondSurface' },
  { viewer: 'Water Temp (Bottom)', erddap: 'WaterTempBottom' },
  { viewer: 'Water Temp (Surface)', erddap: 'WaterTempSurface' },
] as const;

// plankton variables
const PLANKTON_VAR_LABELS = [
  'Silica (Bottom)',
  'NH4 (Surface)',
  'Salinity (Bottom)',
  'Chlorophyll (Surface)',
  'Water Temp (Bottom)',
  'NH4 (Bottom)',
  'NO3 (Bottom)',
  'NO2 (Surface)',
  'DIN (Surface)',
  'DIP (Surface)',
  'NO2 (Bottom)',
  'Water Temp (Surface)',
  'Chlorophyll (Bottom)',
  'Phaeo (Bottom)',
  'Silica (Surface)',
  'Salinity (Surface)',
  'NO3 (Surface)',
  'DIN (Bottom)',
  'Phaeo (Surface)',
  'DIP (Bottom)',
] as const;

const PLANKTON_PAIRS: { viewer: (typeof PLANKTON_VAR_LABELS)[number]; erddap: PlanktonVariable }[] =
  [
    { viewer: 'Silica (Bottom)', erddap: 'SilicaBottom' },
    { viewer: 'NH4 (Surface)', erddap: 'NH4Surface' },
    { viewer: 'Salinity (Bottom)', erddap: 'SalinityBottom' },
    { viewer: 'Chlorophyll (Surface)', erddap: 'ChlorophyllSurface' },
    { viewer: 'Water Temp (Bottom)', erddap: 'WaterTempBottom' },
    { viewer: 'NH4 (Bottom)', erddap: 'NH4Bottom' },
    { viewer: 'NO3 (Bottom)', erddap: 'NO3Bottom' },
    { viewer: 'NO2 (Surface)', erddap: 'NO2Surface' },
    { viewer: 'DIN (Surface)', erddap: 'DINSurface' },
    { viewer: 'DIP (Surface)', erddap: 'DIPSurface' },
    { viewer: 'NO2 (Bottom)', erddap: 'NO2Bottom' },
    { viewer: 'Water Temp (Surface)', erddap: 'WaterTempSurface' },
    { viewer: 'Chlorophyll (Bottom)', erddap: 'ChlorophyllBottom' },
    { viewer: 'Phaeo (Bottom)', erddap: 'PhaeoBottom' },
    { viewer: 'Silica (Surface)', erddap: 'SilicaSurface' },
    { viewer: 'Salinity (Surface)', erddap: 'SalinitySurface' },
    { viewer: 'NO3 (Surface)', erddap: 'NO3Surface' },
    { viewer: 'DIN (Bottom)', erddap: 'DINBottom' },
    { viewer: 'Phaeo (Surface)', erddap: 'PhaeoSurface' },
    { viewer: 'DIP (Bottom)', erddap: 'DIPBottom' },
  ] as const;

const REAL_TIME_VAR_LABELS = [
  'Fluorescence Counts',
  'FDOM',
  'FDOM (Despike)',
  'FDOM Global Range (QC)',
  'FDOM Stuck Value (QC)',
  'Water Temp',
  'Water Temp (Despike)',
  'Water Temp Global Range (QC)',
  'Water Temp Seasonal NB Range (QC)',
  'Water Temp Stuck Value (QC)',
  'Specific Conductance',
  'O2',
  'O2 (Despike)',
  'O2 Global Range (QC)',
  'O2 Stuck Value (QC)',
  'Salinity',
  'Salinity (Despike)',
  'Salinity Global Range (QC)',
  'Salinity Seasonal NB Range (QC)',
  'Salinity Stuck Value (QC)',
  'Chlorophyll (Surface)',
  'Chlorophyll (Despike)',
  'Chlorophyll Seasonal NB Range (QC)',
  'Chlorophyll Stuck Value (QC)',
  'Turbidity',
  'Turbidity (Despike)',
  'Turbidity Stuck Value (QC)',
  'pH',
  'pH (Despike)',
  'pH Global Range (QC)',
  'pH Stuck Value (QC)',
  'Phosphate',
  'Phosphate (QC) Flag',
  'Phosphate Bubble Flag',
  'Phosphate CoV Flag',
  'Phosphate Low Sig Flag',
  'Phosphate OoR Flag',
  'Phosphate Mixing Flag',
  'Hydrocycle Calibration Flag',
  'Phosphate (Despike)',
  'Phosphate Seasonal NBR Range (QC)',
  'Phosphate Stuck Value (QC)',
  'Nitrate',
  'Nitrate (Despike)',
  'Nitrate Global Range (QC)',
  'Nitrate Seasonal NB Range (QC)',
  'Nitrate Stuck Value (QC)',
  'PAR',
  'PAR (Despike)',
  'PAR Instrument Range (QC)',
  'PAR Stuck Value (QC)',
  'Wind Speed Average',
  'Wind Speed Average (Despike)',
  'Wind Speed Average Instrument Range (Despike)',
  'Wind Speed Average Stuck Value (Despike)',
  'Wind Speed Gust',
  'Wind Speed Gust (Despike)',
  'Wind Speed Gust Instrument Range (QC)',
  'Wind Speed Gust Stuck Value (QC)',
  'Air Temperature',
  'Air Temperature (Despike)',
  'Air Temperature Instrument Range QC',
  'Air Temperature Stuck Value (QC)',
  'Air Pressure',
  'Air Pressure (Despike)',
  'Air Pressure Instrument Range (QC)',
  'Air Pressure Stuck Value (QC)',
  'Humidity',
  'Humidity (Despike)',
  'Humidity Instrument Range (QC)',
  'Humidity Stuck Value (QC)',
  'Precipitation',
  'Precipitation (Despike)',
  'Precipitation Instrument Range (QC)',
  'Precipitation Stuck Value (QC)',
  'Solar Irradiance',
  'Solar Irradiance (Despike)',
  'Solar Irradiance Instrument Range (QC)',
  'Solar Irradiance Stuck Value (QC)',
] as const;

const REAL_TIME_PAIRS: {
  viewer: (typeof REAL_TIME_VAR_LABELS)[number];
  erddap: RealTimeBuoyVariable;
}[] = [
  { viewer: 'Fluorescence Counts', erddap: 'FluorescenceCounts' },
  { viewer: 'FDOM', erddap: 'FDOM' },
  { viewer: 'FDOM (Despike)', erddap: 'FDOMDespike' },
  { viewer: 'Water Temp', erddap: 'WaterTempSurface' },
  { viewer: 'Water Temp (Despike)', erddap: 'WaterTempSurfaceDespike' },
  { viewer: 'Specific Conductance', erddap: 'SpCondSurface' },
  { viewer: 'O2', erddap: 'O2Surface' },
  { viewer: 'O2 (Despike)', erddap: 'O2SurfaceDespike' },
  { viewer: 'Salinity', erddap: 'SalinitySurface' },
  { viewer: 'Salinity (Despike)', erddap: 'SalinitySurfaceDespike' },
  { viewer: 'Chlorophyll (Surface)', erddap: 'ChlorophyllSurface' },
  { viewer: 'Chlorophyll (Despike)', erddap: 'ChlorophyllSurfaceDespike' },
  { viewer: 'Turbidity', erddap: 'TurbiditySurface' },
  { viewer: 'Turbidity (Despike)', erddap: 'TurbiditySurfaceDespike' },
  { viewer: 'pH', erddap: 'pHSurface' },
  { viewer: 'pH (Despike)', erddap: 'pHSurfaceDespike' },
  { viewer: 'Phosphate', erddap: 'PhosphateSurface' },
  { viewer: 'Phosphate (Despike)', erddap: 'PhosphateSurfaceDespike' },
  { viewer: 'Nitrate', erddap: 'NitrateNSurface' },
  { viewer: 'Nitrate (Despike)', erddap: 'NitrateNSurfaceDespike' },
  { viewer: 'PAR', erddap: 'PARSurface' },
  { viewer: 'PAR (Despike)', erddap: 'PARSurfaceDespike' },
  { viewer: 'Wind Speed Average', erddap: 'WindSpeedAverage' },
  { viewer: 'Wind Speed Average (Despike)', erddap: 'WindSpeedAverageDespike' },
  { viewer: 'Wind Speed Gust', erddap: 'WindSpeedGust' },
  { viewer: 'Wind Speed Gust (Despike)', erddap: 'WindSpeedGustDespike' },
  { viewer: 'Air Temperature', erddap: 'AirTemp' },
  { viewer: 'Air Temperature (Despike)', erddap: 'AirTempDespike' },
  { viewer: 'Air Pressure', erddap: 'AirPressure' },
  { viewer: 'Air Pressure (Despike)', erddap: 'AirPressureDespike' },
  { viewer: 'Humidity', erddap: 'HumiditySurface' },
  { viewer: 'Humidity (Despike)', erddap: 'HumiditySurfaceDespike' },
  { viewer: 'Precipitation', erddap: 'Precipitation' },
  { viewer: 'Precipitation (Despike)', erddap: 'PrecipitationDespike' },
  { viewer: 'Solar Irradiance', erddap: 'SolarIrradiance' },
  { viewer: 'Solar Irradiance (Despike)', erddap: 'SolarIrradianceDespike' },
];

export function variableToLabel(dataset: Dataset, v: string) {
  const foundPair =
    dataset === 'ri'
      ? RI_PAIRS.find((pair) => pair.erddap === v)
      : dataset === 'ma'
        ? MA_PAIRS.find((pair) => pair.erddap === v)
        : dataset === 'plankton'
          ? PLANKTON_PAIRS.find((pair) => pair.erddap === v)
          : dataset === 'real-time'
            ? REAL_TIME_PAIRS.find((pair) => pair.erddap === v)
            : undefined;
  if (foundPair !== undefined) return foundPair.viewer;
  throw new Error(`No viewer variable for erddap variable "${v}" in dataset "${dataset}"`);
}
